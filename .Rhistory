library(leafdown)
library(shinyjs)
library(mapview)
library(shinydashboard)
library(ggExtra)
library(thematic)
datos_Edomex <- read.csv("data_edomex.csv")
datos_geojson <- st_read("gadm41_MEX_2.json")
Edo_Mex <- datos_geojson %>% dplyr::select(NAME_1, geometry) %>%
dplyr::filter(NAME_1=='México')
Edo_Mex <- cbind(Edo_Mex, datos_Edomex[,2:9])
f <- names(Edo_Mex)[!(names(Edo_Mex) %in% c("NAME_1","Municipality", "geometry", "X"))]
data_Edomex <- Edo_Mex %>% dplyr::select(Municipality,f)
g <- names(data_Edomex)[!(names(data_Edomex) %in% c( "Municipality", "geometry"))]
library(flexdashboard)
library(tidyverse)
library(plotly)
library(sp)
library(geojsonio)
library(jsonlite)
library(haven)
library(sf)
library(bslib)
library(shiny)
library(leaflet)
library(tmap)
library(leafdown)
library(shinyjs)
library(mapview)
library(shinydashboard)
library(ggExtra)
library(thematic)
#####data and shape file
datos_Edomex <- read.csv("data_edomex.csv")
datos_geojson <- st_read("gadm41_MEX_2.json")
Edo_Mex <- datos_geojson %>% dplyr::select(NAME_1, geometry) %>%
dplyr::filter(NAME_1=='México')
Edo_Mex <- cbind(Edo_Mex, datos_Edomex[,2:9])
f <- names(Edo_Mex)[!(names(Edo_Mex) %in% c("NAME_1","Municipality", "geometry", "X"))]
data_Edomex <- Edo_Mex %>% dplyr::select(Municipality,f)
log_data <-
g <- names(data_Edomex)[!(names(data_Edomex) %in% c( "Municipality", "geometry"))]
View(data_Edomex)
f
log_data <- data_Edomex
log_data[,f]
log_data <- datos_Edomex
View(datos_Edomex)
remove(log_data)
datos_Edomex[,4:9] <- sapply(datos_Edomex[,4:9], log)
sidebar <- sidebarPanel(
selectInput("VariableX", "X-axis Variable", choices = g , selected = 'education'),
selectInput("VariableY", "Y-axis Variable", choices = g, selected = 'GINI')
)
# Scatterplot
body <- fluidRow(
plotlyOutput("scatterplot")
)
# Define the server function
server <- function(input, output) {
output$scatterplot <- renderPlotly({
gg <- ggplot(data = datos_Edomex, aes_string(x = input$VariableX,
y = input$VariableY)) +
geom_point(color = "blue", size=1.6, shape=10) +
geom_density_2d(color="green") +
theme(panel.background = element_rect(fill = "gray20"),
panel.grid.major = element_line(colour = "black"))
ggplotly(gg)
})
}
# Combine components
shinyApp(ui = fluidPage(sidebar, body), server)
sidebar <- sidebarPanel(
selectInput("VariableX", "X-axis Variable", choices = g , selected = 'education'),
selectInput("VariableY", "Y-axis Variable", choices = g, selected = 'GINI')
)
# Scatterplot
body <- fluidRow(
plotlyOutput("scatterplot")
)
# Define the server function
server <- function(input, output) {
output$scatterplot <- renderPlotly({
gg <- ggplot(data = datos_Edomex, aes_string(x = input$VariableX,
y = input$VariableY)) +
geom_point(color = "blue", size=1.6, shape=10) +
geom_density_2d(color="green") +
theme(panel.background = element_rect(fill = "gray20"),
panel.grid.major = element_line(colour = "black"))
ggplotly(gg)
})
}
# Combine components
shinyApp(ui = fluidPage(sidebar, body), server)
mapviewOptions(basemaps = c("CartoDB.DarkMatter", "CartoDB.Positron"),
na.color="blue")
mapview(Edo_Mex, zcol=f, height=600, width=900)
dplyr::filter(datos_Edomex, !Monthly.Wage == -inf)
dplyr::filter(datos_Edomex, !Monthly.Wage == -Inf)
log_data <- datos_Edomex %>% dplyr::filter(!Monthly.Wage == -Inf)
library(flexdashboard)
library(tidyverse)
library(plotly)
library(sp)
library(geojsonio)
library(jsonlite)
library(haven)
library(sf)
library(bslib)
library(shiny)
library(leaflet)
library(tmap)
library(leafdown)
library(shinyjs)
library(mapview)
library(shinydashboard)
library(ggExtra)
library(thematic)
log_data <- datos_Edomex %>% dplyr::filter(!Monthly.Wage == -Inf)
View(log_data)
library(flexdashboard)
library(tidyverse)
library(plotly)
library(sp)
library(geojsonio)
library(jsonlite)
library(haven)
library(sf)
library(bslib)
library(shiny)
library(leaflet)
library(tmap)
library(leafdown)
library(shinyjs)
library(mapview)
library(shinydashboard)
library(ggExtra)
library(thematic)
#####data and shape file
datos_Edomex <- read.csv("data_edomex.csv")
datos_geojson <- st_read("gadm41_MEX_2.json")
Edo_Mex <- datos_geojson %>% dplyr::select(NAME_1, geometry) %>%
dplyr::filter(NAME_1=='México')
Edo_Mex <- cbind(Edo_Mex, datos_Edomex[,2:9])
f <- names(Edo_Mex)[!(names(Edo_Mex) %in% c("NAME_1","Municipality", "geometry", "X"))]
data_Edomex <- Edo_Mex %>% dplyr::select(Municipality,f)
datos_Edomex[,4:9] <- sapply(datos_Edomex[,4:9], log)
g <- names(data_Edomex)[!(names(data_Edomex) %in% c( "Municipality", "geometry"))]
View(datos_Edomex)
View(datos_Edomex)
library(flexdashboard)
library(tidyverse)
library(plotly)
library(sp)
library(geojsonio)
library(jsonlite)
library(haven)
library(sf)
library(bslib)
library(shiny)
library(leaflet)
library(tmap)
library(leafdown)
library(shinyjs)
library(mapview)
library(shinydashboard)
library(ggExtra)
library(thematic)
#####data and shape file
datos_Edomex <- read.csv("data_edomex.csv")
datos_geojson <- st_read("gadm41_MEX_2.json")
Edo_Mex <- datos_geojson %>% dplyr::select(NAME_1, geometry) %>%
dplyr::filter(NAME_1=='México')
Edo_Mex <- cbind(Edo_Mex, datos_Edomex[,2:9])
f <- names(Edo_Mex)[!(names(Edo_Mex) %in% c("NAME_1","Municipality", "geometry", "X"))]
data_Edomex <- Edo_Mex %>% dplyr::select(Municipality,f)
#datos_Edomex[,4:9] <- sapply(datos_Edomex[,4:9], log)
g <- names(data_Edomex)[!(names(data_Edomex) %in% c( "Municipality", "geometry"))]
View(datos_Edomex)
medias <- sapply(datos_Edomex[,8:9], mean)
datos_Edomex[datos_Edomex == 0] <- medias[match(names(medias), colnames(datos_Edomex))]
View(datos_Edomex)
library(flexdashboard)
library(tidyverse)
library(plotly)
library(sp)
library(geojsonio)
library(jsonlite)
library(haven)
library(sf)
library(bslib)
library(shiny)
library(leaflet)
library(tmap)
library(leafdown)
library(shinyjs)
library(mapview)
library(shinydashboard)
library(ggExtra)
library(thematic)
#####data and shape file
datos_Edomex <- read.csv("data_edomex.csv")
datos_geojson <- st_read("gadm41_MEX_2.json")
Edo_Mex <- datos_geojson %>% dplyr::select(NAME_1, geometry) %>%
dplyr::filter(NAME_1=='México')
Edo_Mex <- cbind(Edo_Mex, datos_Edomex[,2:9])
f <- names(Edo_Mex)[!(names(Edo_Mex) %in% c("NAME_1","Municipality", "geometry", "X"))]
data_Edomex <- Edo_Mex %>% dplyr::select(Municipality,f)
#datos_Edomex[,4:9] <- sapply(datos_Edomex[,4:9], log)
g <- names(data_Edomex)[!(names(data_Edomex) %in% c( "Municipality", "geometry"))]
mean(datos_Edomex$Monthly.Wage)
mean(filter(!datos_Edomex$Worked.Hours.Week==0)
)
mean(filter(datos_Edomex, !Worked.Hours.Week==0))
mean(dplyr::filter(datos_Edomex, !Worked.Hours.Week==0))
View(datos_Edomex)
#####data and shape file
datos_Edomex <- read.csv("data_edomex.csv")
unscaled_data <- data_Edomex
unscaled_data <- datos_Edomex
library(flexdashboard)
library(tidyverse)
library(plotly)
library(sp)
library(geojsonio)
library(jsonlite)
library(haven)
library(sf)
library(bslib)
library(shiny)
library(leaflet)
library(tmap)
library(leafdown)
library(shinyjs)
library(mapview)
library(shinydashboard)
library(ggExtra)
library(thematic)
#####data and shape file
datos_Edomex <- read.csv("data_edomex.csv")
unscaled_data <- datos_Edomex
datos_geojson <- st_read("gadm41_MEX_2.json")
Edo_Mex <- datos_geojson %>% dplyr::select(NAME_1, geometry) %>%
dplyr::filter(NAME_1=='México')
Edo_Mex <- cbind(Edo_Mex, datos_Edomex[,2:9])
f <- names(Edo_Mex)[!(names(Edo_Mex) %in% c("NAME_1","Municipality", "geometry", "X"))]
data_Edomex <- Edo_Mex %>% dplyr::select(Municipality,f)
datos_Edomex[,4:9] <- sapply(datos_Edomex[,4:9], log)
g <- names(data_Edomex)[!(names(data_Edomex) %in% c( "Municipality", "geometry"))]
install.packages("d3heatmap")
install.packages("DT")
library(DT)
sumary(datos_Edomex)
summary(datos_Edomex)
library(flexdashboard)
library(tidyverse)
library(plotly)
library(sp)
library(geojsonio)
library(jsonlite)
library(haven)
library(sf)
library(bslib)
library(shiny)
library(leaflet)
library(tmap)
library(leafdown)
library(shinyjs)
library(mapview)
library(shinydashboard)
library(ggExtra)
library(thematic)
library(DT)
#####data and shape file
datos_Edomex <- read.csv("data_edomex.csv")
unscaled_data <- datos_Edomex
datos_geojson <- st_read("gadm41_MEX_2.json")
Edo_Mex <- datos_geojson %>% dplyr::select(NAME_1, geometry) %>%
dplyr::filter(NAME_1=='México')
Edo_Mex <- cbind(Edo_Mex, datos_Edomex[,2:9])
f <- names(Edo_Mex)[!(names(Edo_Mex) %in% c("NAME_1","Municipality", "geometry", "X"))]
data_Edomex <- Edo_Mex %>% dplyr::select(Municipality,f)
datos_Edomex[,4:9] <- sapply(datos_Edomex[,4:9], log)
g <- names(data_Edomex)[!(names(data_Edomex) %in% c( "Municipality", "geometry"))]
?plotlyOutput
colnames(datos_Edomex)
colnames(datos_Edomex[,3:9])
sidebar_histogram <- sidebarPanel(
selectInput("varX","Histogram variable", choices = colnames(datos_Edomex[3,9]),   selected = "GINI")
)
body_histogram <- fluidRow(
plotlyOutput("histogram")
)
server_histogram <- function(input, output){
output$histogram <- renderPlotly({
g1 <- ggplot(datos_Edomex, aes_string(x=input$varX)) +
geom_histogram(color="#000000", fill="green") +
labs(title = "histogram forgini index", x="indice gini", y="count") +
geom_density(color = "#000000", fill = "blue", alpha = 0.6) +
thematic::thematic_rmd(font = "auto")
ggplotly(g1)
})
}
shinyApp(ui = fluidPage(sidebar_histogram, body_histogram), server_histogram)
sidebar_histogram <- sidebarPanel(
selectInput("varX","Histogram variable", choices = names(datos_Edomex[3,9]),   selected = "GINI")
)
body_histogram <- fluidRow(
plotlyOutput("histogram")
)
server_histogram <- function(input, output){
output$histogram <- renderPlotly({
g1 <- ggplot(datos_Edomex, aes_string(x=input$varX)) +
geom_histogram(color="#000000", fill="green") +
labs(title = "histogram forgini index", x="indice gini", y="count") +
geom_density(color = "#000000", fill = "blue", alpha = 0.6) +
thematic::thematic_rmd(font = "auto")
ggplotly(g1)
})
}
shinyApp(ui = fluidPage(sidebar_histogram, body_histogram), server_histogram)
sidebar_histogram <- sidebarPanel(
selectInput("varX","Histogram variable", choices = g, selected = "GINI")
)
body_histogram <- fluidRow(
plotlyOutput("histogram")
)
server_histogram <- function(input, output){
output$histogram <- renderPlotly({
g1 <- ggplot(datos_Edomex, aes_string(x=input$varX)) +
geom_histogram(color="#000000", fill="green") +
labs(title = "histogram forgini index", x="indice gini", y="count") +
geom_density(color = "#000000", fill = "blue", alpha = 0.6) +
thematic::thematic_rmd(font = "auto")
ggplotly(g1)
})
}
shinyApp(ui = fluidPage(sidebar_histogram, body_histogram), server_histogram)
sidebar_histogram <- sidebarPanel(
selectInput("varX","Histogram variable", choices = g, selected = "GINI")
)
body_histogram <- fluidRow(
plotlyOutput("histogram")
)
server_histogram <- function(input, output){
output$histogram <- renderPlotly({
g1 <- ggplot(datos_Edomex, aes_string(x=input$varX)) +
geom_histogram(color="#000000", fill="green") +
labs(title = "histogram forgini index", x="indice gini", y="count") +
geom_density(color = "#000000", fill = "blue", alpha = 0.6) +
thematic::thematic_rmd(font = "auto")
ggplotly(g1)
})
}
shinyApp(ui = fluidPage(sidebar_histogram, body_histogram), server_histogram)
sidebar_histogram <- sidebarPanel(
selectInput("varX","Histogram variable", choices = g, selected = "GINI")
)
body_histogram <- fluidRow(
plotlyOutput("histogram")
)
server_histogram <- function(input, output){
output$histogram <- renderPlotly({
g1 <- ggplot(datos_Edomex, aes_string(x=input$varX)) +
geom_histogram(color="#000000", fill="green") +
labs(title = "histogram forgini index", x="indice gini", y="count") +
geom_density(color = "#000000", fill = "blue", alpha = 0.6)
ggplotly(g1)
})
}
shinyApp(ui = fluidPage(sidebar_histogram, body_histogram), server_histogram)
sidebar_histogram <- sidebarPanel(
selectInput("varX","Histogram variable", choices = g, selected = "GINI")
)
body_histogram <- fluidRow(
plotlyOutput("histogram")
)
server_histogram <- function(input, output){
output$histogram <- renderPlotly({
g1 <- ggplot(datos_Edomex, aes_string(x=input$varX)) +
geom_histogram(color="#000000", fill="green") +
labs(title = "histogram forgini index", x="variable", y="count") +
geom_density(color = "#000000", fill = "blue", alpha = 0.6) +
theme(panel.background = element_rect(fill = "gray20"),
panel.grid.major = element_line(colour = "black"))
ggplotly(g1)
})
}
shinyApp(ui = fluidPage(sidebar_histogram, body_histogram), server_histogram)
#datos_Edomex <- datos_Edomex %>% dplyr::filter(!Monthly.Wage == -Inf)
sidebar <- sidebarPanel(
selectInput("VariableX", "X-axis Variable", choices = g , selected = 'education'),
selectInput("VariableY", "Y-axis Variable", choices = g, selected = 'GINI')
)
# Scatterplot
body <- fluidRow(
plotlyOutput("scatterplot")
)
# Define the server function
server <- function(input, output) {
output$scatterplot <- renderPlotly({
gg <- ggplot(data = datos_Edomex, aes_string(x = input$VariableX,
y = input$VariableY)) +
geom_point(color = "blue", size=1.6, shape=10) +
geom_density_2d(color="green") +
theme(panel.background = element_rect(fill = "gray20"),
panel.grid.major = element_line(colour = "black"))
ggplotly(gg)
})
}
# Combine components
shinyApp(ui = fluidPage(sidebar, body, bs_theme(version = 4, bootswatch = "minty")), server)
#datos_Edomex <- datos_Edomex %>% dplyr::filter(!Monthly.Wage == -Inf)
sidebar <- sidebarPanel(
selectInput("VariableX", "X-axis Variable", choices = g , selected = 'education'),
selectInput("VariableY", "Y-axis Variable", choices = g, selected = 'GINI')
)
# Scatterplot
body <- fluidRow(
plotlyOutput("scatterplot")
)
# Define the server function
server <- function(input, output) {
output$scatterplot <- renderPlotly({
gg <- ggplot(data = datos_Edomex, aes_string(x = input$VariableX,
y = input$VariableY)) +
geom_point(color = "blue", size=1.6, shape=10) +
geom_density_2d(color="green") +
theme(panel.background = element_rect(fill = "gray20"),
panel.grid.major = element_line(colour = "black"))
ggplotly(gg)
})
}
# Combine components
shinyApp(ui = fluidPage(sidebar, body), server)
renderPlotly({
g1 <- ggplot(datos_Edomex, aes_string(x=input$VariableX)) +
geom_histogram(color="#000000", fill="green") +
#labs(title = "histogram for x variable", x="variable x", y="count") +
geom_density(color = "#000000", fill = "blue", alpha = 0.6) +
theme(panel.background = element_rect(fill = "gray20"),
panel.grid.major = element_line(colour = "black"))
ggplotly(g1)
})
gg <- ggplot(data=Edo_Mex, maping=aes(x=GINI)) +
geom_point() +
theme_linedraw()
library(flexdashboard)
library(tidyverse)
library(plotly)
library(sp)
library(geojsonio)
library(jsonlite)
library(haven)
library(sf)
library(bslib)
library(shiny)
library(leaflet)
library(tmap)
library(leafdown)
library(shinyjs)
library(mapview)
library(shinydashboard)
library(ggExtra)
library(thematic)
library(DT)
#####data and shape file
datos_Edomex <- read.csv("data_edomex.csv")
unscaled_data <- datos_Edomex
datos_geojson <- st_read("gadm41_MEX_2.json")
Edo_Mex <- datos_geojson %>% dplyr::select(NAME_1, geometry) %>%
dplyr::filter(NAME_1=='México')
Edo_Mex <- cbind(Edo_Mex, datos_Edomex[,2:9])
f <- names(Edo_Mex)[!(names(Edo_Mex) %in% c("NAME_1","Municipality", "geometry", "X"))]
data_Edomex <- Edo_Mex %>% dplyr::select(Municipality,f)
datos_Edomex[,4:9] <- sapply(datos_Edomex[,4:9], log)
g <- names(data_Edomex)[!(names(data_Edomex) %in% c( "Municipality", "geometry"))]
gg <- ggplot(data=Edo_Mex, maping=aes(x=GINI)) +
geom_point() +
theme_linedraw()
plotly(gg)
g
gg
remove(gg)
View(datos_Edomex)
View(data_Edomex)
ggplot() + geom_sf(data=data_Edomex)
ggplot() +
geom_sf(data = data_Edomex, aes(fill = GINI), color = "white") +
scale_fill_gradient(low = "white", high = "blue")
ggplot() +
geom_sf(data = data_Edomex, aes(fill = GINI), color = "white") +
scale_fill_gradient(low = "white", high = "blue")
View(data_Edomex)
colnames(data_Edomex)
renderPlotly({
g1 <- ggplot() +
geom_sf(data = data_Edomex, aes_string(fill = input$VariableY), color = "black") +
scale_fill_gradient(low = "white", high = "blue") +
geom_sf_text(data = data_Edomex, aes(label = Municipality), size = 3, color = "white") +
theme(panel.background = element_rect(fill = "gray20"),
panel.grid.major = element_line(colour = "black"))
ggplotly(g1)
})
renderPlotly({
g1 <- ggplot() +
geom_sf(data = data_Edomex, aes_string(fill = input$VariableY), color = "black") +
scale_fill_gradient(low = "white", high = "blue") +
theme(panel.background = element_rect(fill = "gray20"),
panel.grid.major = element_line(colour = "black"))
ggplotly(g1)
})
