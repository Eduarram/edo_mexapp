Edo_Mex <- Edo_Mex %>% dplyr::select(!Total.Investment)
Edo_Mex <- cbind(Edo_Mex, edomex_shpe$geometry)
View(Edo_Mex)
colnames(Edo_Mex)
economic_names <- c("GINI", "population", "education", "Total.Income", "Total.Expenses", "Monthly.Wage", "Worked.Hours.Week")
Edo_Mex[,economic_names]
Spp_list <- for(i in Edo_Mex[,economic_names]){
Spp_list[[i]] <- cbind(Edo_Mex[i], edomex_shpe$geometry)
}
Spp_list <- for(i in Edo_Mex[,economic_names]){
Spp_list[[i]] <- cbind(Edo_Mex[i], edomex_shpe$geometry)
}
spp_list <- list()
for(i in Edo_Mex[,economic_names]){
Spp_list[[i]] <- cbind(Edo_Mex[i], edomex_shpe$geometry)
}
Spp_list <- list()
for(i in Edo_Mex[,economic_names]){
Spp_list[[i]] <- cbind(Edo_Mex[i], edomex_shpe$geometry)
}
remove(Spp_list)
remove(spp_list)
for(i in Edo_Mex[,economic_names]){
Spp_list[[i]] <- cbind(Edo_Mex[i], edomex_shpe$geometry)
}
Spp_list <- list()
for(i in Edo_Mex[,economic_names]){
Spp_list[[i]] <- cbind(Edo_Mex[i], edomex_shpe$geometry)
}
for (i in Edo_Mex[, economic_names]) {
print(paste("Processing column:", i))
# Check if the column 'i' exists in Edo_Mex
if (i %in% colnames(Edo_Mex)) {
# Combine the selected column with the geometry column
Spp_list[[i]] <- cbind(Edo_Mex[, i, drop = FALSE], edomex_shpe$geometry)
} else {
print(paste("Column", i, "does not exist in Edo_Mex"))
}
}
View(Spp_list)
Spp_list[[i]] <- cbind(Edo_Mex[i], edomex_shpe$geometry)
Edo_Mex[,economic_names]
for (i in Edo_Mex[, economic_names]) {
print(paste("Processing column:", i))
# Check if the column 'i' exists in Edo_Mex
if (i %in% colnames(Edo_Mex)) {
# Combine the selected column with the geometry column
Spp_list[[i]] <- cbind(Edo_Mex[, i, drop = FALSE], edomex_shpe$geometry)
} else {
print(paste("Column", i, "does not exist in Edo_Mex"))
}
}
Spp_list[[i]] <- cbind(Edo_Mex[i, drop=FALSE], edomex_shpe$geometry)
Spp_list[[i]] <- cbind(Edo_Mex[i], edomex_shpe$geometry)
plot(Edo_Mex)
View(Edo_Mex)
plot(edomex_shpe)
length(edomex_shpe)
length(edomex_shpe$NAME_2)
length(Edo_Mex$GINI)
Spp_list[[i]] <- cbind(Edo_Mex[i], Edo_Mex$geometry)
Spp_list <- Edo_Mex[i]
View(Spp_list)
View(Spp_list)
Spp_list <- Edo_Mex[i]
View(Spp_list)
print(i)
print(i)
for(i in Edo_Mex[i,]){
print(i)
}
print(i)
print(i)
print(i)
for(i in Edo_Mex[,i]){
print(i)
}
for(i in Edo_Mex[,economic_names]){
print(i)
}
for(i in Edo_Mex[,economic_names]){
Spp_list[[i]] <- Edo_Mex[i]
}
Spp_list[[i]] <- Edo_Mex[[i]]
for (i in economic_names) {
# Check if the column 'i' exists in Edo_Mex
if (i %in% colnames(Edo_Mex)) {
# Use double brackets to subset a single column as a data frame
selected_column <- Edo_Mex[[i]]
# Combine the selected column with the geometry column
Spp_list[[i]] <- cbind(selected_column, edomex_shpe$geometry)
} else {
print(paste("Column", i, "does not exist in Edo_Mex"))
}
}
View(Spp_list)
plot(Spp_list[[1]])
plot(Spp_list[1])
class(Spp_list)
for (i in economic_names) {
# Check if the column 'i' exists in Edo_Mex
if (i %in% colnames(Edo_Mex)) {
# Use double brackets to subset a single column as a data frame
selected_column <- Edo_Mex[[i]]
# Combine the selected column with the geometry column
combined_data <- cbind(selected_column, edomex_shpe$geometry)
# Add the combined data to the list
Spp_list[[i]] <- combined_data
} else {
print(paste("Column", i, "does not exist in Edo_Mex"))
}
}
View(Spp_list)
length(Edo_Mex$geometry)
plot(Edo_Mex)
View(Edo_Mex)
for (i in economic_names) {
# Check if the column 'i' exists in Edo_Mex
if (i %in% colnames(Edo_Mex)) {
# Use double brackets to subset a single column as a data frame
selected_column <- Edo_Mex[[i]]
# Combine the selected column with the geometry column
combined_data <- selected_column
# Add the combined data to the list
Spp_list[[i]] <- combined_data
} else {
print(paste("Column", i, "does not exist in Edo_Mex"))
}
}
View(Spp_list)
Spp_list <- list()
for (i in economic_names) {
# Check if the column 'i' exists in Edo_Mex
if (i %in% colnames(Edo_Mex)) {
# Use double brackets to subset a single column as a data frame
selected_column <- Edo_Mex[[i]]
# Combine the selected column with the geometry column
combined_data <- selected_column
# Add the combined data to the list
Spp_list[[i]] <- combined_data
} else {
print(paste("Column", i, "does not exist in Edo_Mex"))
}
}
plot(Edo_Mex$geometry)
for (i in economic_names) {
# Check if the column 'i' exists in Edo_Mex
if (i %in% colnames(Edo_Mex)) {
# Use double brackets to subset a single column as a data frame
selected_column <- Edo_Mex[[i]]
# Combine the selected column with the geometry column
combined_data <- selected_column
# Add the combined data to the list
Spp_list[[i]] <- combined_data
} else {
print(paste("Column", i, "does not exist in Edo_Mex"))
}
}
View(Spp_list)
Spp_list <- list()
for (i in economic_names) {
# Check if the column 'i' exists in Edo_Mex
if (i %in% colnames(Edo_Mex)) {
# Use double brackets to subset a single column as a data frame
selected_column <- Edo_Mex[[i]]
# Combine the selected column with the geometry column
combined_data <- selected_column
# Add the combined data to the list
Spp_list[[i]] <- cbind(combined_data, Edo_Mex$geometry)
} else {
print(paste("Column", i, "does not exist in Edo_Mex"))
}
}
View(Spp_list)
plot(Spp_list}[[1]])
plot(Spp_list}[1])
plot(Spp_list[1])
plot(Spp_list[[1]])
View(Spp_list)
Spp_list[["GINI"]][[2]]
Spp_list[["GINI"]][[6]]
remove(Spp_list)
Spp_list <- list()
for (i in economic_names) {
# Check if the column 'i' exists in Edo_Mex
if (i %in% colnames(Edo_Mex)) {
# Use double brackets to subset a single column as a data frame
selected_column <- Edo_Mex[[i]]
# Combine the selected column with the geometry column
combined_data <- selected_column
# Add the combined data to the list
Spp_list[[i]] <- cbind(Edo_Mex$Municipality ,combined_data)
} else {
print(paste("Column", i, "does not exist in Edo_Mex"))
}
}
View(Spp_list)
View(Edo_Mex)
leaflet(edomex_shpe) %>% addTiles() %>% addPolygons()
Spp_list[1]
Spp_list[1][2]
Spp_list[1][,2]
Spp_list[1,2]
class(Spp_list[1])
class(Spp_list[[1]])
class(Spp_list[1])
Spp_list <- list()
for (i in economic_names) {
# Check if the column 'i' exists in Edo_Mex
if (i %in% colnames(Edo_Mex)) {
# Use double brackets to subset a single column as a data frame
selected_column <- Edo_Mex[[i]]
# Combine the selected column with the geometry column
combined_data <- selected_column
# Add the combined data to the list
Spp_list[[i]] <- combined_data
} else {
print(paste("Column", i, "does not exist in Edo_Mex"))
}
}
class(Spp_list[1])
Spp_list[1]
leaflet(edomex_shpe) %>%
addTiles() %>%
addPolygons(stroke = FALSE,
smoothFactor = 0.3,
fillOpacity = 1,
fillColor =~Spp_list[1])
#######Creacion del mapa
var_select[Spp_list[1]
pal <- colorQuantile("YlOrRd", domain = Edo_Mex[[var_select]], n = 5)
#######Creacion del mapa
var_select[Spp_list[1]
]
#######Creacion del mapa
var_select[Spp_list[1]]
Spp_list[2]
#######Creacion del mapa
var_select <- Spp_list[1]
pal <- colorQuantile("YlOrRd", domain =var_selec, n = 5)
pal <- colorQuantile("YlOrRd", domain =var_select, n = 5)
leaflet(edomex_shpe) %>%
addTiles() %>%
addPolygons(stroke = FALSE,
smoothFactor = 0.3,
fillOpacity = 1,
fillColor =~pal)
leaflet(edomex_shpe) %>%
addTiles() %>%
addPolygons(stroke = FALSE,
smoothFactor = 0.3,
fillOpacity = 1,
fillColor =~Spp_list[1])
View(Edo_Mex)
setwd( "C:\\Users\\eduar\\OneDrive\\Desktop\\proyecto salud\\healt proyect\\data\\cleaning")
getwd()
gini_data <- fromJSON("Desigualdad-social-segun-GINI-en-Estado-de-Mexico-2020.json")
education_data <- fromJSON("Poblacion-que-asiste-a-la-escuela--Total-Poblacion-entre-3-y-24-anos.json")
library(jsonlite)
library(tidyverse)
library(plotly)
library(sp)
library(RColorBrewer)
library(maps)
library(geojsonio)
library(sf)
library(tmap)
library(leaflet)
library(colorspace)
library(htmltools)
gini_data <- fromJSON("Desigualdad-social-segun-GINI-en-Estado-de-Mexico-2020.json")
education_data <- fromJSON("Poblacion-que-asiste-a-la-escuela--Total-Poblacion-entre-3-y-24-anos.json")
poblacion_total <- read.csv("Distribucion-de-la-poblacion-total-segun-municipio--Clic-en-el-grafico-para-seleccionar.csv")
id_edomex <-education_data$`Municipality ID`
gini_data <- gini_data[order(gini_data$Municipality),]
education_data <- education_data[order(education_data$Municipality),]
poblacion_total <- poblacion_total[order(poblacion_total$Municipality),]
censo_economico <- read.csv("inegi_economic_census_additional_2023-11-23T18_02_13.256Z.csv")
economic_census_Emex <- censo_economico %>% filter(Municipality.ID %in% id_edomex)
salary <- read.csv("salario y horas.csv")
salary_edomex <- salary %>% filter(Municipality.ID %in% id_edomex)
salary_edomex <- salary_edomex[order(salary_edomex$Municipality),]
salary_edomex <- salary_edomex %>%  select(!Municipality.ID)
economic_census_Emex <- economic_census_Emex[order(economic_census_Emex$Municipality),]
datos_geojson <- st_read("gadm41_MEX_2.json")
Edo_Mex <- datos_geojson %>% dplyr::select(NAME_1, geometry) %>%
dplyr::filter(NAME_1=='MÃ©xico')
Edo_Mex <- cbind(Municipality=gini_data$Municipality, GINI=gini_data$GINI,population=poblacion_total$Population,
education=education_data$Percentage,
economic_census_Emex[,3:5])
Edo_Mex <- dplyr::left_join(Edo_Mex, salary_edomex, by="Municipality")
View(Edo_Mex)
economic_census_Emex[,3:5]
gini_data <- fromJSON("Desigualdad-social-segun-GINI-en-Estado-de-Mexico-2020.json")
education_data <- fromJSON("Poblacion-que-asiste-a-la-escuela--Total-Poblacion-entre-3-y-24-anos.json")
poblacion_total <- read.csv("Distribucion-de-la-poblacion-total-segun-municipio--Clic-en-el-grafico-para-seleccionar.csv")
id_edomex <-education_data$`Municipality ID`
gini_data <- gini_data[order(gini_data$Municipality),]
education_data <- education_data[order(education_data$Municipality),]
poblacion_total <- poblacion_total[order(poblacion_total$Municipality),]
censo_economico <- read.csv("inegi_economic_census_additional_2023-11-23T18_02_13.256Z.csv")
economic_census_Emex <- censo_economico %>% filter(Municipality.ID %in% id_edomex)
salary <- read.csv("salario y horas.csv")
salary_edomex <- salary %>% filter(Municipality.ID %in% id_edomex)
salary_edomex <- salary_edomex[order(salary_edomex$Municipality),]
salary_edomex <- salary_edomex %>%  select(!Municipality.ID)
economic_census_Emex <- economic_census_Emex[order(economic_census_Emex$Municipality),]
datos_geojson <- st_read("gadm41_MEX_2.json")
Edo_Mex <- datos_geojson %>% dplyr::select(NAME_1, geometry) %>%
dplyr::filter(NAME_1=='MÃ©xico')
Edo_Mex <- cbind(Municipality=gini_data$Municipality, GINI=gini_data$GINI,population=poblacion_total$Population,
education=education_data$Percentage,
economic_census_Emex[,3:4])
Edo_Mex <- dplyr::left_join(Edo_Mex, salary_edomex, by="Municipality")
Edo_Mex <-
write.csv(Edo_Mex, "data_edomex.csv")
gini_data <- fromJSON("Desigualdad-social-segun-GINI-en-Estado-de-Mexico-2020.json")
education_data <- fromJSON("Poblacion-que-asiste-a-la-escuela--Total-Poblacion-entre-3-y-24-anos.json")
poblacion_total <- read.csv("Distribucion-de-la-poblacion-total-segun-municipio--Clic-en-el-grafico-para-seleccionar.csv")
id_edomex <-education_data$`Municipality ID`
gini_data <- gini_data[order(gini_data$Municipality),]
education_data <- education_data[order(education_data$Municipality),]
poblacion_total <- poblacion_total[order(poblacion_total$Municipality),]
censo_economico <- read.csv("inegi_economic_census_additional_2023-11-23T18_02_13.256Z.csv")
economic_census_Emex <- censo_economico %>% filter(Municipality.ID %in% id_edomex)
salary <- read.csv("salario y horas.csv")
salary_edomex <- salary %>% filter(Municipality.ID %in% id_edomex)
salary_edomex <- salary_edomex[order(salary_edomex$Municipality),]
salary_edomex <- salary_edomex %>%  select(!Municipality.ID)
economic_census_Emex <- economic_census_Emex[order(economic_census_Emex$Municipality),]
datos_geojson <- st_read("gadm41_MEX_2.json")
Edo_Mex <- datos_geojson %>% dplyr::select(NAME_1, geometry) %>%
dplyr::filter(NAME_1=='MÃ©xico')
Edo_Mex <- cbind(Municipality=gini_data$Municipality, GINI=gini_data$GINI,population=poblacion_total$Population,
education=education_data$Percentage,
economic_census_Emex[,3:4])
Edo_Mex <- dplyr::left_join(Edo_Mex, salary_edomex, by="Municipality")
View(Edo_Mex)
View(Edo_Mex)
Edo_Mex <- mutate_all(Edo_Mex,~replace(., is.na(.), 0))
write.csv(Edo_Mex, "data_edomex.csv")
library(jsonlite)
library(tidyverse)
library(sp)
library(maps)
library(geojsonio)
library(sf)
setwd( "C:\\Users\\eduar\\OneDrive\\Desktop\\proyecto salud\\healt proyect\\data\\cleaning")
gini_data <- fromJSON("Desigualdad-social-segun-GINI-en-Estado-de-Mexico-2020.json")
education_data <- fromJSON("Poblacion-que-asiste-a-la-escuela--Total-Poblacion-entre-3-y-24-anos.json")
poblacion_total <- read.csv("Distribucion-de-la-poblacion-total-segun-municipio--Clic-en-el-grafico-para-seleccionar.csv")
id_edomex <-education_data$`Municipality ID`
gini_data <- gini_data[order(gini_data$Municipality),]
education_data <- education_data[order(education_data$Municipality),]
poblacion_total <- poblacion_total[order(poblacion_total$Municipality),]
censo_economico <- read.csv("inegi_economic_census_additional_2023-11-23T18_02_13.256Z.csv")
economic_census_Emex <- censo_economico %>% filter(Municipality.ID %in% id_edomex)
salary <- read.csv("salario y horas.csv")
salary_edomex <- salary %>% filter(Municipality.ID %in% id_edomex)
salary_edomex <- salary_edomex[order(salary_edomex$Municipality),]
salary_edomex <- salary_edomex %>%  select(!Municipality.ID)
conomic_census_Emex <- economic_census_Emex[order(economic_census_Emex$Municipality),]
datos_geojson <- st_read("gadm41_MEX_2.json")
Edo_Mex <- datos_geojson %>% dplyr::select(NAME_1, geometry) %>%
dplyr::filter(NAME_1=='MÃ©xico')
Edo_Mex <- cbind(Municipality=gini_data$Municipality, GINI=gini_data$GINI,population=poblacion_total$Population,
education=education_data$Percentage,
economic_census_Emex[,3:4])
Edo_Mex <- dplyr::left_join(Edo_Mex, salary_edomex, by="Municipality")
View(Edo_Mex)
install.packages("zoo")
library(zoo)
Edo_Mex <- na.aggregate(Edo_Mex, FUN=mean)
View(Edo_Mex)
Edo_Mex[,8:9] <- na.aggregate(Edo_Mex[,8:9], FUN=mean)
Edo_Mex[,7:8] <- na.aggregate(Edo_Mex[,7:8], FUN=mean)
Edo_Mex[,7:8] <- na.aggregate(Edo_Mex[,7:8], FUN=mean())
Edo_Mex[,7:8] <- na.aggregate(Edo_Mex[,7:8], FUN=mean)
remove.packages("zoo")
mean(Edo_Mex$Monthly.Wage)
mean(Edo_Mex$Monthly.Wage, na.rm = TRUE)
class(Edo_Mex$Monthly.Wage)
summary(Edo_Mex)
summary(as.numeric(Edo_Mex$Worked.Hours.Week))
mean(as.numeric(Edo_Mex$Monthly.Wage), na.rm = TRUE)
install.packages("zoo")
View(Edo_Mex)
Edo_Mex[, 2:8]
Edo_Mex[,2:8] <- sapply(Edo_Mex[,2:8], as.numeric)
summary(Edo_Mex)
library(zoo)
?na.aggregate
Edo_Mex <- na.aggregate(Edo_Mex, FUN=mean)
remove.packages("zoo")
replace(Edo_Mex$Monthly.Wage, is.na(Edo_Mex$Monthly.Wage), mean(Edo_Mex$Monthly.Wage))
class(Edo_Mex$Monthly.Wage)
Edo_Mex[,2:8] <- sapply(Edo_Mex[,2:8], as.numeric)
class(Edo_Mex$Monthly.Wage)
replace(Edo_Mex$Monthly.Wage, is.na(Edo_Mex$Monthly.Wage), mean(Edo_Mex$Monthly.Wage))
?replace_na
na.replace
na.replace()
library(jsonlite)
library(tidyverse)
library(sp)
library(maps)
library(geojsonio)
library(sf)
?replace_na
Edo_Mex[is.na(Edo_Mex)]
Edo_Mex[is.na(Edo_Mex)] <- 0
View(Edo_Mex)
gini_data <- fromJSON("Desigualdad-social-segun-GINI-en-Estado-de-Mexico-2020.json")
education_data <- fromJSON("Poblacion-que-asiste-a-la-escuela--Total-Poblacion-entre-3-y-24-anos.json")
poblacion_total <- read.csv("Distribucion-de-la-poblacion-total-segun-municipio--Clic-en-el-grafico-para-seleccionar.csv")
id_edomex <-education_data$`Municipality ID`
# economic census
gini_data <- gini_data[order(gini_data$Municipality),]
education_data <- education_data[order(education_data$Municipality),]
poblacion_total <- poblacion_total[order(poblacion_total$Municipality),]
# read the total income and salarys
censo_economico <- read.csv("inegi_economic_census_additional_2023-11-23T18_02_13.256Z.csv")
economic_census_Emex <- censo_economico %>% filter(Municipality.ID %in% id_edomex)
salary <- read.csv("salario y horas.csv")
salary_edomex <- salary %>% filter(Municipality.ID %in% id_edomex)
salary_edomex <- salary_edomex[order(salary_edomex$Municipality),]
salary_edomex <- salary_edomex %>%  select(!Municipality.ID)
# read the spatial frame
economic_census_Emex <- economic_census_Emex[order(economic_census_Emex$Municipality),]
datos_geojson <- st_read("gadm41_MEX_2.json")
Edo_Mex <- datos_geojson %>% dplyr::select(NAME_1, geometry) %>%
dplyr::filter(NAME_1=='MÃ©xico')
#### gini and population ###
Edo_Mex <- cbind(Municipality=gini_data$Municipality, GINI=gini_data$GINI,population=poblacion_total$Population,
education=education_data$Percentage,
economic_census_Emex[,3:4])
Edo_Mex <- dplyr::left_join(Edo_Mex, salary_edomex, by="Municipality")
Edo_Mex[,2:8] <- sapply(Edo_Mex[,2:8], as.numeric)
Edo_Mex$Monthly.Wage[is.na(Edo_Mex$Monthly.Wage)] <- 0
View(Edo_Mex)
gini_data <- fromJSON("Desigualdad-social-segun-GINI-en-Estado-de-Mexico-2020.json")
education_data <- fromJSON("Poblacion-que-asiste-a-la-escuela--Total-Poblacion-entre-3-y-24-anos.json")
poblacion_total <- read.csv("Distribucion-de-la-poblacion-total-segun-municipio--Clic-en-el-grafico-para-seleccionar.csv")
id_edomex <-education_data$`Municipality ID`
# economic census
gini_data <- gini_data[order(gini_data$Municipality),]
education_data <- education_data[order(education_data$Municipality),]
poblacion_total <- poblacion_total[order(poblacion_total$Municipality),]
# read the total income and salarys
censo_economico <- read.csv("inegi_economic_census_additional_2023-11-23T18_02_13.256Z.csv")
economic_census_Emex <- censo_economico %>% filter(Municipality.ID %in% id_edomex)
salary <- read.csv("salario y horas.csv")
salary_edomex <- salary %>% filter(Municipality.ID %in% id_edomex)
salary_edomex <- salary_edomex[order(salary_edomex$Municipality),]
salary_edomex <- salary_edomex %>%  select(!Municipality.ID)
# read the spatial frame
economic_census_Emex <- economic_census_Emex[order(economic_census_Emex$Municipality),]
datos_geojson <- st_read("gadm41_MEX_2.json")
Edo_Mex <- datos_geojson %>% dplyr::select(NAME_1, geometry) %>%
dplyr::filter(NAME_1=='MÃ©xico')
#### gini and population ###
Edo_Mex <- cbind(Municipality=gini_data$Municipality, GINI=gini_data$GINI,population=poblacion_total$Population,
education=education_data$Percentage,
economic_census_Emex[,3:4])
Edo_Mex <- dplyr::left_join(Edo_Mex, salary_edomex, by="Municipality")
Edo_Mex[,2:8] <- sapply(Edo_Mex[,2:8], as.numeric)
replace_mean <- function(X){
mean_value = mean(X, na.rm=TRUE)
X[is.na(X)]=mean_value
}
replace_mean(Edo_Mex$Monthly.Wage)
View(Edo_Mex)
print(replace_mean(Edo_Mex$Monthly.Wage))
Edo_Mex[,2:8] <- sapply(Edo_Mex[,2:8], replace_mean)
gini_data <- fromJSON("Desigualdad-social-segun-GINI-en-Estado-de-Mexico-2020.json")
education_data <- fromJSON("Poblacion-que-asiste-a-la-escuela--Total-Poblacion-entre-3-y-24-anos.json")
poblacion_total <- read.csv("Distribucion-de-la-poblacion-total-segun-municipio--Clic-en-el-grafico-para-seleccionar.csv")
id_edomex <-education_data$`Municipality ID`
# economic census
gini_data <- gini_data[order(gini_data$Municipality),]
education_data <- education_data[order(education_data$Municipality),]
poblacion_total <- poblacion_total[order(poblacion_total$Municipality),]
# read the total income and salarys
censo_economico <- read.csv("inegi_economic_census_additional_2023-11-23T18_02_13.256Z.csv")
economic_census_Emex <- censo_economico %>% filter(Municipality.ID %in% id_edomex)
salary <- read.csv("salario y horas.csv")
salary_edomex <- salary %>% filter(Municipality.ID %in% id_edomex)
salary_edomex <- salary_edomex[order(salary_edomex$Municipality),]
salary_edomex <- salary_edomex %>%  select(!Municipality.ID)
# read the spatial frame
economic_census_Emex <- economic_census_Emex[order(economic_census_Emex$Municipality),]
datos_geojson <- st_read("gadm41_MEX_2.json")
Edo_Mex <- datos_geojson %>% dplyr::select(NAME_1, geometry) %>%
dplyr::filter(NAME_1=='MÃ©xico')
#### gini and population ###
Edo_Mex <- cbind(Municipality=gini_data$Municipality, GINI=gini_data$GINI,population=poblacion_total$Population,
education=education_data$Percentage,
economic_census_Emex[,3:4])
Edo_Mex <- dplyr::left_join(Edo_Mex, salary_edomex, by="Municipality")
Edo_Mex[,2:8] <- sapply(Edo_Mex[,2:8], as.numeric)
replace_mean <- function(X){
mean_value <- mean(X, na.rm=TRUE)
X[is.na(X)] <- mean_value
}
replace_mean <- function(X){
mean_value <- mean(X, na.rm=TRUE)
return(X[is.na(X)] <- mean_value)
}
print(replace_mean(Edo_Mex$Monthly.Wage))
Edo_Mex %>% mutate(across(where(is.numeric), ~replace_na(., mean(., na.rm=TRUE))))
Edo_Mex <- Edo_Mex %>% mutate(across(where(is.numeric), ~replace_na(., mean(., na.rm=TRUE))))
write.csv(Edo_Mex, "data_edomex.csv")
